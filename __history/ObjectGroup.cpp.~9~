//--------------------------------------------------------------------------


#include <vcl.h>
#include "Plan.h"
#include "SeaFeld.h"
#include "ObjectGroup.h"

//---------------------------------------------------------------------------




int Object::GetX(){
   return x;
}

int Object::GetY(){
   return y;
}
void Object::ReadX(int value){
   this->x = value;
}

void Object::ReadY(int value){
   this->y = value;
}


void Object::DetectFeld(){       //

}


void Object::JudegObject(){      //

}


bool Object::IfFull(){
        if(this->degreeFull>0.8){
            return true;
        }else{
            return false;
        }
}


bool Object::IfLive(){
        if(this->degreeLife>0.8){
            return true;
        }else{
            return false;
        }
}

void Object::Objectencode(int t){
    switch(t){
        case 0 : break;
    }
}

void Object::CopyOf(int t){
	this->code = t;
    switch (this->code){
		case 0 :{
                for(int i =0;i<20;i++){
					  for(int j = 0;j <20;j++){
						  this->shape[i][j] = this->shapeSea[i][j];
					  }
				   }
                 }
        case 1 :{
                 for(int i =0;i<20;i++){
					  for(int j = 0;j <20;j++){
						  this->shape[i][j] = this->shapeFish[i][j];
					  }
                  }
				 }
        case 2 :{
                  for(int i =0;i<20;i++){
                      for(int j = 0;j <20;j++){
						  this->shape[i][j] = this->shapeBigFish[i][j];
                      }
                    }
                 }
        case 3 :{
                  for(int i =0;i<20;i++){
                      for(int j = 0;j <20;j++){
                          this->shape[i][j] = this->shapeHai[i][j];
                      }
                  }
                 }
    }
}
Object::Object(int px,int py,int c){
	this->x = px;
	this->y = py;
	this->code = c;
	this->xInPixel = 0;
	this->yInPixel = 0;
	memset(this->shape,0,sizeof(this->shape)) ;
}

Object::Object(int c){
	this->code = c;
	this->xInPixel = 0;
	this->yInPixel = 0;
	this->x = 0;
	this->y = 0;
	memset(this->shape,0,sizeof(this->shape)) ;
}





